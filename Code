
#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdlib>
//
//using std::string
//
using namespace std;

class node{
public:
    int key;
    int data;
    node* prev;

    node(){
        key = 0;
        data = 0;
        prev = NULL;
    }
    node(int d,int k){
        data = d;
        key = k;
    }
};

class stackLink{
public:
    node* top;

    stackLink(){
        top = NULL;
    }
    stackLink(node* n){
        top = n;
    }

    //methods
    void push(node* n){
        if(top = NULL){
            top = n;
        }
        else{
            n->prev = top;
            top = n;
        }
    }
    void pop(){
        top = top->prev;
    }
    void first(){
        printf("%d",top);
    }
    int vazio(){
        if(top = NULL){
            return 1;
        }
        else{
            return 0;
        }
    }
    
    //reverse stack O(n)
    void reverser(){
        temp = top;
        while( temp != NULL){
            node* n = temp->prev;
            n->prev = temp;
            temp = temp->prev;
        }
        top = temp;
    }
    
};










int main(){
    /*\n*/






return 0;

}
